openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        "200":
          description: ""
      tags:
        - App
  /events:
    post:
      operationId: EventController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEventDto"
      responses:
        "201":
          description: ""
      summary: Create a event
      tags: &a1
        - Events
    get:
      operationId: EventController_findPaginated
      parameters:
        - name: cursor
          required: false
          in: query
          description: Value of the last item for pagination
          schema:
            type: string
        - name: size
          required: false
          in: query
          description: "Page size (default: 10)"
          schema:
            type: number
        - name: sort
          required: false
          in: query
          schema:
            enum:
              - asc
              - desc
            type: string
        - name: sortBy
          required: false
          in: query
          schema:
            enum:
              - title
              - startDate
              - endDate
            type: string
      responses:
        "200":
          description: ""
      summary: List posts with cursor-based pagination and dynamic sorting
      tags: *a1
  /events/{id}:
    get:
      operationId: EventController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
      summary: Get a event by ID
      tags: *a1
  /events/{id}/disable:
    patch:
      operationId: EventController_disable
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
      summary: disable a event
      tags: *a1
  /events/{id}/enable:
    patch:
      operationId: EventController_enable
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
      summary: enable a event
      tags: *a1
  /events/{id}/conditions/reset:
    patch:
      operationId: EventController_resetConditions
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
      summary: Reset conditions to empty array
      tags: *a1
  /events/{id}/conditions/append:
    patch:
      operationId: EventController_appendComment
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventConditionDto"
      responses:
        "200":
          description: ""
      summary: Append a single condition
      tags: *a1
  /events/{id}/conditions/replace:
    patch:
      operationId: EventController_replaceComments
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEventConditionsDto"
      responses:
        "200":
          description: ""
      summary: Replace all conditions with new list
      tags: *a1
info:
  title: API Docs
  description: NestJS Study API description
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateEventDto:
      type: object
      properties:
        title:
          type: string
        startDate:
          type: string
          example: 2025-06-01T12:00:00.000Z
          format: date-time
        endDate:
          type: string
          example: 2025-06-01T12:00:00.000Z
          format: date-time
      required:
        - title
        - startDate
        - endDate
    EventConditionDto:
      type: object
      properties:
        eventType:
          type: string
        targetCode:
          type: string
        fromDate:
          type: string
          example: 2025-06-01T12:00:00.000Z
          format: date-time
        toDate:
          type: string
          example: 2025-06-01T12:00:00.000Z
          format: date-time
        quantity:
          type: number
      required:
        - eventType
        - targetCode
        - fromDate
        - toDate
        - quantity
    UpdateEventConditionsDto:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/EventConditionDto"
      required:
        - conditions
